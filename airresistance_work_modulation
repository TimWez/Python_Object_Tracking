import numpy as np
import matplotlib.pyplot as plt
from matplotlib import rc  # Used for LaTeX compatibility
rc('text', usetex=True)    # Enable LaTeX-style font rendering
rc('font', family='serif')

velocity = np.array([2.002498439450078, 1.8110770276274832, 1.9000000000000006, 1.811077027627485, 1.7999999999999983, 1.60312195418814, 1.8027756377319961, 1.8027756377319928, 1.7029386365926393, 1.7029386365926393, 1.6031219541881367, 1.702938636592646, 1.599999999999997, 1.5033296378372922, 1.7117242768623684, 1.5033296378372922, 1.5033296378372922, 1.4035668847618126, 1.5033296378372922, 1.4035668847618257, 1.403566884761819, 1.414213562373094, 1.3038404810405333, 1.4035668847618126, 1.3038404810405333, 1.403566884761819, 1.216552506059645, 1.3000000000000034, 1.216552506059645, 1.2165525060596383, 1.000000000000003, 1.216552506059645, 1.200000000000001, 1.1180339887498936, 1.1180339887498933, 0.9999999999999964, 1.0198039027185666, 1.0049875621120854, 1.0049875621120856, 1.0049875621120987, 0.9055385138137358, 1.0049875621120856, 0.7071067811865503, 0.9219544457292831, 0.8000000000000052, 0.9055385138137357, 0.9219544457292961, 0.7071067811865503, 0.7071067811865502, 0.806225774829847, 0.8062257748298602, 0.6082762530298224, 0.7071067811865372, 0.7071067811865505, 0.6082762530298224, 0.6082762530298226, 0.6000000000000005, 0.6324555320336637, 0.6000000000000005, 0.538516480713461, 0.5000000000000115, 0.6000000000000005, 0.44721359549994294, 0.3999999999999959, 0.40000000000000924, 0.6324555320336763, 0.30000000000000693, 0.2999999999999936, 0.4123105625617623, 0.41231056256176185, 0.20000000000000462, 0.3999999999999959, 0.20000000000000462, 0.22360679774998266, 0.3162277660168442, 0.2828427124746126, 0.10000000000000231, 0.1999999999999913, 0.0, 0.20000000000000462, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10000000000000064, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10000000000000064, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10000000000000064])
distance = np.array([0.1075, 0.1225, 0.13833333333333334, 0.15333333333333335, 0.16833333333333333, 0.18166666666666667, 0.19666666666666668, 0.21166666666666667, 0.22583333333333333, 0.24, 0.2533333333333333, 0.2675, 0.2808333333333333, 0.29333333333333333, 0.3075, 0.32, 0.3325, 0.3441666666666666, 0.35666666666666663, 0.36833333333333335, 0.38, 0.39166666666666666, 0.4025, 0.4141666666666666, 0.425, 0.43666666666666665, 0.44666666666666666, 0.4575, 0.4675, 0.4775, 0.48583333333333334, 0.49583333333333335, 0.5058333333333334, 0.515, 0.5241666666666667, 0.5325, 0.5408333333333334, 0.5491666666666667, 0.5575, 0.5658333333333334, 0.5733333333333334, 0.5816666666666667, 0.5875, 0.595, 0.6016666666666667, 0.6091666666666666, 0.6166666666666667, 0.6225, 0.6283333333333334, 0.635, 0.6416666666666667, 0.6466666666666667, 0.6525, 0.6583333333333333, 0.6633333333333333, 0.6683333333333333, 0.6733333333333333, 0.6783333333333332, 0.6833333333333332, 0.6875, 0.6916666666666668, 0.6966666666666668, 0.7, 0.7033333333333333, 0.7066666666666667, 0.7116666666666667, 0.7141666666666667, 0.7166666666666667, 0.72, 0.7233333333333333, 0.725, 0.7283333333333333, 0.73, 0.7316666666666667, 0.7341666666666667, 0.7358333333333333, 0.7366666666666667, 0.7383333333333333, 0.7383333333333333, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74])

# Constants
mass = 0.0127  # Mass in kg
C_w = 1.15     # Drag coefficient
rho = 1.293    # Air density in kg/m^3
A = 6.63e-4    # Cross-sectional area in m^2

# Calculate incremental distances
incremental_distances = np.diff(distance)
velocity = velocity[:-2]
F_air_list = []

for v in velocity:
    # Calculate air resistance force in this interval
    F_air = (0.5 * C_w * rho * A * v ** 2)
    F_air_list.append(F_air)

F_air_array = np.array(F_air_list)

# Plotting Air Resistance Force vs Distance with Rectangles
plt.figure(figsize=(10, 4))
plt.plot(distance[1:], F_air_array, label='Kracht luchtweerstand (N)', color='black', linewidth=2.5)

def generate_equally_spaced_values(x, n):
    if n < 1:
        raise ValueError("n must be a positive integer and x must be greater than or equal to 1.")
    values = np.linspace(1, x, n)
    return list(values)

alpha_list = generate_equally_spaced_values(0.3, len(F_air_array))
alpha_list = alpha_list[::-1]

for i in range(len(F_air_array)):
    plt.bar(distance[i], F_air_array[i], width=incremental_distances[i], align='edge',
            color='teal', alpha=alpha_list[i], label='Arbeid luchtweerstand (W)')

# Adding a multi-line text box with LaTeX formula in the top right corner\
textstr = r'\noindent $m = {0.0127}\ kg\\ C_w = {1.15}\\ A = {0.000663}\ m^2\\ \rho = {1.293}\ kgm^3\\ W = \sum_{i=1}^n \left( \frac{1}{2} C_w \rho A v_i^2 \cdot \Delta s_i \right)\\ W = 0.000546\ J$'
plt.text(0.982,0.78, textstr, transform=plt.gca().transAxes, fontsize=10,
         verticalalignment='top', horizontalalignment='right',
         bbox=dict(facecolor='white', edgecolor='gray', boxstyle='round,pad=0.5',
                   alpha=0.5, linewidth=1))

# Adding plot stuff
plt.title('Nat. PO A5 `Joule voor gevorderden`, Arbeid luchtweerstand. Proef I VID_5 120 FPS ')
plt.xlabel('Afstand (m)')
plt.ylabel('Luchtweerstand (N)')
plt.ylim(0, np.max(F_air_array) * 1.1)  # Set y-limit slightly above the max force for better visibility

handles, labels = plt.gca().get_legend_handles_labels()
by_label = dict(zip(labels, handles))
plt.legend(by_label.values(), by_label.keys())

plt.show()
graph_file = f'Air_resistance.png'
plt.savefig(graph_file, dpi=1000)    # Save the graph
plt.close()                          # Close the graph

# Calculate and print total work done against air resistance
total_work_done = np.sum(F_air_array * incremental_distances)
print(f"Estimated total work done against air resistance: {total_work_done:.8f} J")
